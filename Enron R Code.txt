path = "C:\\Users\\pearl\\Downloads\\Analytics edge\\Text Analytics"
setwd(path)
edata = read.csv("energy_bids.csv")
summary(edata)
# because the length of emails is huge, we use strwrap to read a part of the email
strwrap(edata$email[1])
edata$responsive[1]
strwrap(edata$email[2])
edata$responsive[2]
table(edata$responsive)
install.packages("tm")
library(tm)
install.packages("SnowballC")
library(SnowballC)
corpus = Corpus(VectorSource(edata$email))
strwrap(corpus[[1]])
#lowercase
corpus = tm_map(corpus, tolower)
#converting to plaintextdoc
+corpus = tm_map(corpus, PlainTextDocument)
#remove punctuaation
corpus = tm_map(corpus, removePunctuation)
#remove stopwords
corpus = tm_map(corpus,removeWords,stopwords("english"))
corpus = tm_map(corpus, stemDocument)
strwrap(corpus[[1]])
#Now we can apply our machine learning algos
#document term matrix for our corpus
dtm = DocumentTermMatrix(corpus)
dtm
#removing sparse terms-that occur less(atleast 3% of docs)
dtm = removeSparseTerms(dtm, 0.97)
dtm
#building data frame 
labeledTerms = as.data.frame(as.matrix(dtm))
labeledTerms$responsive = edata$responsive 
str(labeledTerms)
library(caTools)
set.seed(144)
spl = sample.split(labeledTerms$responsive, 0.7)
train = subset(labeledTerms, spl == TRUE)
test = subset(labeledTerms, spl == FALSE)
library(rpart)
library(rpart.plot)
emailCart = rpart(responsive~., data = train, method = "class")
prp(emailCart)
#lets predict now
pred = predict(emailCart, newdata = test)
pred[1:10,]
pred.prob = pred[,2]
table(test$responsive, pred.prob>= 0.5)
#accuracy: 
(195+25)/(195+25+17+20)
#lets check baseline
table(test$responsive)
215/(215+42)
#we see a small imprrovement which is common in unbalanced dataset
# lets develop a roc curve
library(ROCR)
predROCR = prediction(pred.prob, test$responsive)
perfROCR = performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize = TRUE)
performance(predROCR, "auc")@y.values
# so our model has an AUC value of 79.63% which means that our model can differentiate between a responsive and non responsive document 80% of the time













